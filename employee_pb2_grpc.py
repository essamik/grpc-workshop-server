# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import employee_pb2 as employee__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class EmployeeStubStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendMessage = channel.unary_unary(
                '/tutorial.employee.EmployeeStub/SendMessage',
                request_serializer=employee__pb2.MessageRequest.SerializeToString,
                response_deserializer=employee__pb2.MessageResponse.FromString,
                )
        self.AddEmployee = channel.unary_unary(
                '/tutorial.employee.EmployeeStub/AddEmployee',
                request_serializer=employee__pb2.EmployeeCreationRequest.SerializeToString,
                response_deserializer=employee__pb2.EmployeeCreationResponse.FromString,
                )
        self.CreateEmployeeAsStreamAndGetMedianAge = channel.stream_unary(
                '/tutorial.employee.EmployeeStub/CreateEmployeeAsStreamAndGetMedianAge',
                request_serializer=employee__pb2.EmployeeCreationRequest.SerializeToString,
                response_deserializer=employee__pb2.MedianAgeResponse.FromString,
                )
        self.CreateEmployeeAsStreamAndGetMedianAgeAsStream = channel.stream_stream(
                '/tutorial.employee.EmployeeStub/CreateEmployeeAsStreamAndGetMedianAgeAsStream',
                request_serializer=employee__pb2.EmployeeCreationRequest.SerializeToString,
                response_deserializer=employee__pb2.MedianAgeResponse.FromString,
                )
        self.GetMedianAge = channel.unary_unary(
                '/tutorial.employee.EmployeeStub/GetMedianAge',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=employee__pb2.MedianAgeResponse.FromString,
                )


class EmployeeStubServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SendMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddEmployee(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateEmployeeAsStreamAndGetMedianAge(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateEmployeeAsStreamAndGetMedianAgeAsStream(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMedianAge(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EmployeeStubServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SendMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.SendMessage,
                    request_deserializer=employee__pb2.MessageRequest.FromString,
                    response_serializer=employee__pb2.MessageResponse.SerializeToString,
            ),
            'AddEmployee': grpc.unary_unary_rpc_method_handler(
                    servicer.AddEmployee,
                    request_deserializer=employee__pb2.EmployeeCreationRequest.FromString,
                    response_serializer=employee__pb2.EmployeeCreationResponse.SerializeToString,
            ),
            'CreateEmployeeAsStreamAndGetMedianAge': grpc.stream_unary_rpc_method_handler(
                    servicer.CreateEmployeeAsStreamAndGetMedianAge,
                    request_deserializer=employee__pb2.EmployeeCreationRequest.FromString,
                    response_serializer=employee__pb2.MedianAgeResponse.SerializeToString,
            ),
            'CreateEmployeeAsStreamAndGetMedianAgeAsStream': grpc.stream_stream_rpc_method_handler(
                    servicer.CreateEmployeeAsStreamAndGetMedianAgeAsStream,
                    request_deserializer=employee__pb2.EmployeeCreationRequest.FromString,
                    response_serializer=employee__pb2.MedianAgeResponse.SerializeToString,
            ),
            'GetMedianAge': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMedianAge,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=employee__pb2.MedianAgeResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'tutorial.employee.EmployeeStub', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class EmployeeStub(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SendMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tutorial.employee.EmployeeStub/SendMessage',
            employee__pb2.MessageRequest.SerializeToString,
            employee__pb2.MessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddEmployee(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tutorial.employee.EmployeeStub/AddEmployee',
            employee__pb2.EmployeeCreationRequest.SerializeToString,
            employee__pb2.EmployeeCreationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateEmployeeAsStreamAndGetMedianAge(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/tutorial.employee.EmployeeStub/CreateEmployeeAsStreamAndGetMedianAge',
            employee__pb2.EmployeeCreationRequest.SerializeToString,
            employee__pb2.MedianAgeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateEmployeeAsStreamAndGetMedianAgeAsStream(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/tutorial.employee.EmployeeStub/CreateEmployeeAsStreamAndGetMedianAgeAsStream',
            employee__pb2.EmployeeCreationRequest.SerializeToString,
            employee__pb2.MedianAgeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMedianAge(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tutorial.employee.EmployeeStub/GetMedianAge',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            employee__pb2.MedianAgeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
